<?php
namespace Minbaby\OpentracingTrift;

use OpenTracing\Tracer;
use Thrift\Protocol\TProtocol;
use Thrift\Protocol\TProtocolDecorator;

class SpanProtocol extends TProtocolDecorator
{
    /**
     * @var Tracer
     */
    protected $tracer;
    /**
     * @var Tracer
     */
    private $tracker;
    
    const SPAN_FIELD_ID = 3333;
    
    /**
     * SpanProtocol constructor.
     * @param TProtocol $protocol
     * @param Tracer    $tracer
     */
    protected function __construct(TProtocol $protocol, Tracer $tracer)
    {
        parent::__construct($protocol);
        $this->tracer = $tracer;
    }
    
    public function readMessageBegin(&$name, &$type, &$seqid)
    {
        return parent::readMessageBegin($name, $type, $seqid); // TODO: Change the autogenerated stub
    }
    
    public function readMessageEnd()
    {
        return parent::readMessageEnd(); // TODO: Change the autogenerated stub
    }
    
    /**
     * @inheritdoc
     */
    public function writeMessageBegin($name, $type, $seqid)
    {
        return parent::writeMessageBegin($name, $type, $seqid);
    }
    
    public function writeFieldStop()
    {
        return parent::writeFieldStop(); // TODO: Change the autogenerated stub
    }
    
    
}